方案一：根据设备的实际宽度来设计（常用）即布局viewport等于视口viewport。
手机宽320px，布局viewport就拿320px来设计。

方案二：1px=1dp
缩放0.5。好处：1px边框和高清图片都不需要额外处理。


flexbox弹性盒子布局：
涉及到文字是比如li中字数个数不同会出现不同宽度而导致不均分。
解决方案：给每个li设置统一的width。

响应式设计
设计点一：百分比布局
媒体查询使用不同宽度切换不同的css，切换过程没有平滑的渐变。
当没有命中媒体查询时会出现滚动或换行。所以推荐使用百分比。
设计点二：弹性图片
img{max-width：100%}图片需要有一个包裹层，这样主要媒体查询是
更改外层的样式，图片都能刚好填满包裹层也就实现了弹性图片。
设计点三：重新布局，显示和隐藏
当页面达到手机宽度的时候，需要放弃一些传统的页面设计思想，
力求页面达到简洁，做出以下处理：
1，同比例缩减元素尺寸。
2，调整页面布局结构。
3，隐藏冗余的元素。
经常需要切换位置的元素使用绝对定位，减少重绘提高渲染性能。

关于响应式：
响应式设计的理念，一个页面包含所有设备不同屏幕的样式和图片，
出现样式冗余。需要权衡利弊 ，考虑性能还是减少重复开发。

单位：优化：横向百分比，纵向rem(有些手机不支持横向rem如华为有的型号)
移动端开发是使用rem单位处理元素长度。对于根部HTML的font-size
的处理使用js计算比较灵活。
document.getElementsByTagName("html")[0].style.fontSize=
window.innerWidth/10+"px";
屏幕宽度不一定除以10，在计算和处理上10更方便；把整个屏幕宽
当成10个单位处理。

meta标签
<meta name="viewport" content="width=device-width,initial-scale=1,
mininum-scale=1.0,maxinum-scale=1.0,user-scalable=no">

效果与效果图存在一些偏差？
浏览器对小数值得处理方式不同，根本原因是浏览器内核数字类型的区别。
如果数字类型是float型，不会存在偏差，如果是into型，会对数值四舍五入，
元素越大偏差就月明显，一个单位相差不大，多个单位就明显了。所以
尽量适应更多浏览器就行。

雪碧图的定位：
由以上可知，在移动端换算后的尺寸不是非常精准，所以在制作雪碧
图的时候，图之间的间隙留大点一面越界。

rem单位最好不要用在pc端。

对于边框的处理可能会带来计算上的误差，可以通过HTML5技术来处理
，使用阴影处理，不占用实际空间，也就不存在计算问题。